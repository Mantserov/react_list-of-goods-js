{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","visibleGoods","setVisibleGoods","sortBy","setSortBy","reverseActive","setReverseActive","className","type","cn","onClick","sort","reverse","good1","good2","length","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KA4CA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAuB,aAAXN,IAEdO,QAlDmB,WACrBL,GACFH,EAAgB,YAAID,GAAcU,QAClCP,EAAU,cAEVF,EAAgB,YAAID,GAAcU,OAC/BC,WACHR,EAAU,cAsCR,iCAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAuB,WAAXN,IAEdO,QAjDa,WACfL,GACFH,EACE,YAAID,GAAcU,MAAK,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,WAEhEX,EAAU,YAEVF,EACE,YAAID,GAAcU,MAAK,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAC3DH,WAELR,EAAU,YAiCR,4BAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYJ,IAEdK,QA5CQ,WAEZR,EAAgB,YAAID,GAAcW,WAClCN,GAAkBD,IAoChB,qBAUY,OAAXF,GAAoBE,EASnB,GARA,wBACEG,KAAK,SACLD,UAAU,4BACVG,QA3CI,WACZR,EAAgBJ,GAChBM,EAAU,MACVE,GAAiB,IAqCX,sBAYJ,6BACGL,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YChHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7cb9938e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [sortBy, setSortBy] = useState(null);\n  const [reverseActive, setReverseActive] = useState(true);\n\n  const sortAlphabetically = () => {\n    if (reverseActive) {\n      setVisibleGoods([...visibleGoods].sort());\n      setSortBy('alphabet');\n    } else {\n      setVisibleGoods([...visibleGoods].sort()\n        .reverse());\n      setSortBy('alphabet');\n    }\n  };\n\n  const sortByLength = () => {\n    if (reverseActive) {\n      setVisibleGoods(\n        [...visibleGoods].sort((good1, good2) => good1.length - good2.length),\n      );\n      setSortBy('length');\n    } else {\n      setVisibleGoods(\n        [...visibleGoods].sort((good1, good2) => good1.length - good2.length)\n          .reverse(),\n      );\n      setSortBy('length');\n    }\n  };\n\n  const reverse = () => {\n    if (sortBy) {\n      setVisibleGoods([...visibleGoods].reverse());\n      setReverseActive(!reverseActive);\n    } else {\n      setVisibleGoods([...visibleGoods].reverse());\n      setReverseActive(!reverseActive);\n    }\n  };\n\n  const reset = () => {\n    setVisibleGoods(goodsFromServer);\n    setSortBy(null);\n    setReverseActive(true);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== 'alphabet',\n          })}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== 'length',\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': reverseActive,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {sortBy !== null || !reverseActive ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        ) : (\n          ''\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}